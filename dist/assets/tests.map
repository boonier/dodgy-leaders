{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dogdy-leaders/tests/acceptance/dodgy-leaders-test.js","dogdy-leaders/tests/integration/components/jumbo-test.js","dogdy-leaders/tests/integration/components/leader/image-test.js","dogdy-leaders/tests/integration/components/leaders-test.js","dogdy-leaders/tests/test-helper.js","dogdy-leaders/tests/unit/routes/about-test.js","dogdy-leaders/tests/unit/routes/about/blog-test.js","dogdy-leaders/tests/unit/routes/about/blog/post-test.js","dogdy-leaders/tests/unit/routes/about/index-test.js","dogdy-leaders/tests/unit/routes/contact-test.js","dogdy-leaders/tests/unit/routes/index-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dogdy-leaders/tests/acceptance/dodgy-leaders-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Acceptance | dodgy leaders\", function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)(\"visiting /\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/\");\n      assert.dom(\"nav\").exists();\n      assert.dom(\"h1\").hasText(\"Dodgy Leaders\");\n      assert.dom(\"h2\").hasText(\"Choose your leader!\");\n      assert.dom(\".jumbo a.button\").hasText(\"About us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n    (0, _qunit.test)(\"visiting /about\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/about\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n      assert.dom(\"nav\").exists();\n      assert.dom(\"h1\").hasText(\"Dodgy Leaders\");\n      assert.dom(\"h2\").hasText(\"About Dodgy Leaders\");\n      assert.dom(\".jumbo a.button\").hasText(\"Contact us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n    });\n    (0, _qunit.test)(\"visiting /getting-in-touch\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/getting-in-touch\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n      assert.dom(\"nav\").exists();\n      assert.dom(\"h1\").hasText(\"Dodgy Leaders\");\n      assert.dom(\"h2\").hasText(\"Contact us\");\n      assert.dom(\"a.button\").hasText(\"About\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n    (0, _qunit.test)(\"navigating using the nav-bar\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/\");\n      assert.dom(\"nav\").exists();\n      assert.dom(\"nav a.menu-index\").hasText(\"Dodgy Leaders\");\n      assert.dom(\"nav a.menu-about\").hasText(\"About\");\n      assert.dom(\"nav a.menu-contact\").hasText(\"Contact\");\n      await (0, _testHelpers.click)(\"nav a.menu-about\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n      await (0, _testHelpers.click)(\"nav a.menu-contact\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n      await (0, _testHelpers.click)(\"nav a.menu-index\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/\");\n    });\n  });\n});","define(\"dogdy-leaders/tests/integration/components/jumbo-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | jumbo\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders the content inside a jumbo header with a tomster\", async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Jumbo>Hello World</Jumbo>\n      */\n      {\n        id: \"+Qg9uEw1\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"jumbo\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"Hello World\\\"]],\\\"parameters\\\":[]}]]]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom(\".jumbo\").exists();\n      assert.dom(\".jumbo\").hasText(\"Hello World\");\n      assert.dom(\".jumbo .tomster\").exists();\n    });\n  });\n});","define(\"dogdy-leaders/tests/integration/components/leader/image-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | leader/image\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders the given image\", async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Leader::Image\n              src=\"/assets/images/teaching-tomster.png\"\n              alt=\"Teaching Tomster\"\n            />\n          \n      */\n      {\n        id: \"DLrF8CI/\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"leader/image\\\",[[24,\\\"src\\\",\\\"/assets/images/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],[[],[]],null],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom(\".image\").exists();\n      assert.dom(\".image img\").hasAttribute(\"src\", \"/assets/images/teaching-tomster.png\");\n      assert.dom(\".image img\").hasAttribute(\"alt\", \"Teaching Tomster\");\n    });\n    (0, _qunit.test)(\"clicking on the component toggles its size\", async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Leader::Image\n              src=\"/assets/teaching-tomster.png\"\n              alt=\"Teaching Tomster\"\n            />\n          \n      */\n      {\n        id: \"dNqhIgnX\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"leader/image\\\",[[24,\\\"src\\\",\\\"/assets/teaching-tomster.png\\\"],[24,\\\"alt\\\",\\\"Teaching Tomster\\\"]],[[],[]],null],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom(\"button.image\").exists();\n      assert.dom(\".image\").doesNotHaveClass(\"large\");\n      assert.dom(\".image small\").hasText(\"View Larger\");\n      await (0, _testHelpers.click)(\"button.image\");\n      assert.dom(\".image\").hasClass(\"large\");\n      assert.dom(\".image small\").hasText(\"View Smaller\");\n      await (0, _testHelpers.click)(\"button.image\");\n      assert.dom(\".image\").doesNotHaveClass(\"large\");\n      assert.dom(\".image small\").hasText(\"View Larger\");\n    });\n  });\n});","define(\"dogdy-leaders/tests/integration/components/leaders-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | leaders\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders information about dodgy leaders\", async function (assert) {\n      this.setProperties({\n        leader: {\n          title: \"Donald Trump\",\n          leadership_qualities: \"Disruptor, nut-job, being orange\",\n          known_for: \"Insighting unrest, advising people drink bleach\",\n          location_city: \"Washington DC, USA\",\n          location: {\n            lat: 37.7749,\n            lng: -122.4194\n          },\n          net_worth: \"$100 billion ++ better than +++\",\n          image: \"https://sadanduseless.b-cdn.net/wp-content/uploads/2019/06/funny-man-buns10.jpg\"\n        }\n      });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Leader @leader={{this.leader}} />\n      */\n      {\n        id: \"vHu/D+cb\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"leader\\\",[],[[\\\"@leader\\\"],[[32,0,[\\\"leader\\\"]]]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom(\"article\").hasClass(\"leader\");\n      assert.dom(\"article h3\").hasText(\"Donald Trump\");\n      assert.dom(\"article .detail.leadership-qualities\").includesText(\"Disruptor\");\n      assert.dom(\"article .detail.location\").includesText(\"USA\");\n      assert.dom(\"article .detail.net-worth\").includesText(\"$100 billion ++ better than +++\");\n      assert.dom(\"article .detail.known-for\").includesText(\"Insighting unrest\");\n      assert.dom(\"article .image\").exists();\n    });\n  });\n});","define(\"dogdy-leaders/tests/test-helper\", [\"dogdy-leaders/app\", \"dogdy-leaders/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"dogdy-leaders/tests/unit/routes/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about');\n      assert.ok(route);\n    });\n  });\n});","define(\"dogdy-leaders/tests/unit/routes/about/blog-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about/blog', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about/blog');\n      assert.ok(route);\n    });\n  });\n});","define(\"dogdy-leaders/tests/unit/routes/about/blog/post-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about/blog/post', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about/blog/post');\n      assert.ok(route);\n    });\n  });\n});","define(\"dogdy-leaders/tests/unit/routes/about/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about/index');\n      assert.ok(route);\n    });\n  });\n});","define(\"dogdy-leaders/tests/unit/routes/contact-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | contact', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:contact');\n      assert.ok(route);\n    });\n  });\n});","define(\"dogdy-leaders/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define('dogdy-leaders/config/environment', [], function() {\n  var prefix = 'dogdy-leaders';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dogdy-leaders/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}